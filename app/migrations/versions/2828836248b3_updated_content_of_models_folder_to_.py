"""Updated content of models folder to Model

Revision ID: 2828836248b3
Revises: dcc829334c5a
Create Date: 2024-08-05 10:19:26.205181

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2828836248b3'
down_revision = 'dcc829334c5a'
branch_labels = None
depends_on = None


def upgrade():
    # Check if the 'vendors' table already exists
    if not op.get_bind().dialect.has_table(op.get_bind(), 'vendors'):
        op.create_table('vendors',
            sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
            sa.Column('name', sa.String(), nullable=True),
        )

    # Check if the 'products' table already exists
    if not op.get_bind().dialect.has_table(op.get_bind(), 'products'):
        op.create_table('products',
            sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
            sa.Column('name', sa.String(), nullable=True),
            sa.Column('description', sa.String(), nullable=True),
        )

    # Check if the 'users' table already exists
    if not op.get_bind().dialect.has_table(op.get_bind(), 'users'):
        op.create_table('users',
            sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
            sa.Column('username', sa.String(), nullable=True),
            sa.Column('email', sa.String(), nullable=True),
            sa.Column('hashed_password', sa.String(), nullable=True),
            sa.Column('profile_picture', sa.String(), nullable=True),
            sa.Column('preferences', sa.String(), nullable=True),
            sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=True),
            sa.Column('role', sa.String(), server_default=sa.text("'user'"), nullable=True),
            sa.Column('two_factor_enabled', sa.Boolean(), server_default=sa.text('false'), nullable=True),
            sa.Column('two_factor_secret', sa.String(), nullable=True),
            sa.Column('password_last_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
            sa.Column('failed_login_attempts', sa.Integer(), server_default=sa.text('0'), nullable=True),
            sa.Column('account_locked', sa.Boolean(), server_default=sa.text('false'), nullable=True),
            sa.Column('backup_codes', sa.String(), nullable=True),
            sa.UniqueConstraint('email', name='users_email_key'),
            sa.UniqueConstraint('username', name='users_username_key'),
        )

    # Check if the 'orders' table already exists
    if not op.get_bind().dialect.has_table(op.get_bind(), 'orders'):
        op.create_table('orders',
            sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
            sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=True),
            sa.Column('product_id', sa.Integer(), sa.ForeignKey('products.id'), nullable=True),
            sa.Column('status', sa.String(), nullable=True),
            sa.Column('quantity', sa.Integer(), nullable=True),
            sa.Column('tracking_number', sa.String(), nullable=True),
        )

    # Check if the 'wishlists' table already exists
    if not op.get_bind().dialect.has_table(op.get_bind(), 'wishlists'):
        op.create_table('wishlists',
            sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
            sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=True),
            sa.Column('product_id', sa.Integer(), sa.ForeignKey('products.id'), nullable=True),
        )

    # Check if the 'reviews' table already exists
    if not op.get_bind().dialect.has_table(op.get_bind(), 'reviews'):
        op.create_table('reviews',
            sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
            sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=True),
            sa.Column('product_id', sa.Integer(), sa.ForeignKey('products.id'), nullable=True),
            sa.Column('vendor_id', sa.Integer(), sa.ForeignKey('vendors.id'), nullable=True),
            sa.Column('rating', sa.Integer(), nullable=True),
            sa.Column('comment', sa.String(), nullable=True),
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('wishlists')
    op.drop_table('orders')
    op.drop_table('users')
    op.drop_table('products')
    op.drop_table('vendors')
    # ### end Alembic commands ###
